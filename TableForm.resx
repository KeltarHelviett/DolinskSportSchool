<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC9wMQAcaHHAOXRww7x18Qy89fEWfba
        xXf22MSG9trFhfbYxHT02cZU7tXDLOHQwgv//9IApbfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADk0cQA283DA/DWxCz12cR6+dnDv/fT
        vef107747MKv/vDMuP/qvqv/8825/u/ItPf52MLk+drDuPXZxHDv1cQk08vBAt/QwQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADXy8UA///IAPDWxSP22MSN9tW/5PDK
        tv7isKD/6Lqo/+nCsP/ktKP/7Maz/+a3pf/swK7/4KmZ//zYwf/xxrL/7cWx/vnYwt312MR/7tbEG//h
        xQDNycYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA59LFAN3PxwT02MRT9tXA1PPN
        uf/cpZb/68Ct/+7DsP/61r///djB///bw///2sL//9vD//7awv/+2cL//9rD//LItP/pvKn/36yc//DL
        t/7318LI89fERMTIxAHg0cMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOzUxADk0cQH9tjDc/fW
        wO/nv67/5rmo//XPuv/92cH//9vD///awv//2sL//9rC///awv//2sL//9rC///awv//2sL//9vD//vW
        v//pvKv/6cOy/+W4p//42MLn89jEYNbLxQPl0sUAAAAAAAAAAAAAAAAAAAAAAAAAAADn0sQA2MzFBPfZ
        xHb20r323qiY//PPuv/718D//9vD///awv//2sL//9rC///awv//2sL//9rC///awv//2sL//9rC///a
        wv//2sL//9rC///bw//61r//8Mi0/+CsnP/10bzv9trEYYirwwHg0MQAAAAAAAAAAAAAAAAA2M3HAP/q
        vwD12cVa9NG88ee7qv/xybb//dnA///cwv//2sL//9vC///bwv//2sL//9rC///awv//2sL//9rC///a
        wv//2sL//9rC///awv//2sL//9rC///bwv/92cH/78Ov/+q7qP/10b3n89jERv/exADFxr8AAAAAABOH
        vgD018QA79fFK/jVwNnwyrb/6sCt//7bw//xzsf/5MLF//vXwv/uzMj/5MLF//3Zwf//3ML/+dbE//vX
        wP//28L//9zC//nWxP/71sH//trC//vYw//72MP/+tfD//zYwv/+2sL/68Gv//PQvP/418HJ7NXDHO/W
        wwAAAAAA4tLEANLNxAX42sSa7cGu/+Crm//+28P//93B/9Kw0f9vSuL/k3Ha/3hT4/+Nbdr/u5rL/8Gg
        0/+Sb+D/mXXQ/+TAvP/DotT/km/g/5p20//Ip8r/kW7d/4pn3f+Oa93/o4DR//nUv//92sP/5bWl//XP
        uv/32sSCAEa0ANzOwgD018MA8NbDOfjYw+zz0r//9dG8///awv//2sL/+NXG/4xo3v+kgc3/h2Th/7mZ
        1/91T+H/hF/d/+LAy/+riNr/jWnQ/4hk3f/fvMv/3LvO/8Gh1v+Oatj/jmvc/6aE0/+IY9j/9dG////b
        wv/20r3/672q//XSvd7v18Un8NXDAP//igD42sSN78Wy/+e9rP/31b///9vC///awv//3cH/x6XT/2lD
        4f+sidb/0a/Q/2lC5v9+V9b/5cG+/7OR2f+Rb97/hV/W/+C8vv/lw8j/v53P/5dz1P+Ydtj/s5HN/4tm
        2P/10b///9vC//3Zwf/nuKb/8cu2//bZxHT/4MMA6NPDGvvaw8/0x7H/67il/+rKxv/41sP//93B///b
        wf/xz8j/kG3h/9+9yv/du87/tZTS/7mX1P+MaN3/nHre/+rIyv+6mNX/jGjd/5x63f/EptP/tJTS/7SU
        1f/IqM3/q4rV//jUwf//2sL//9rC//7awv/+2cL/+tjCu+LPwg3w1sJH/NnC8f/bw///3MP/hHLc/2da
        4//Bp8//8tDF///cwv/93MP//9zC//7bw//82cT//tzC//XSx//72MT//9zB//7cwv/10sf/+dbF//3a
        w//72MT/+9jE//zZxP/72MT//9rC///awv//2sL//9rC///awv/82cLl8NTDL/XXwnX+2sL9/9rC///b
        wv9xYuH/Bwf5/xsY9P9IP+n/gnHc/7Sb0v/Stcv/5MPI/+zKxv/vzMX/8c7F//DNxf/yz8X/9dLE//nW
        w//92cL//9zB///dwf//3cH//9zC///awv//2sL//9rC///awv//2sL//9rC//3Zwvjz1sNY9tfCl//a
        wv//2sL//9vB/31k1/8LCvf/Cgz6/woK+f8LC/j/ExH2/yAc8v8tKPD/NzLw/zo17v8+OO7/U0nk/0Y9
        6v9IQOr/UUfo/2JW5P9+bt7/nYjX/8Gmz//iwsj/+NXD///cwv//28L//9rC///awv//2sL//trC/vXX
        wnj22MKo/9rC///awv//28L/22Z6/48Mdv9KD73/Hg7o/w0N+P8KDfv/CQz7/zEp2/97OqH/gTWb/382
        mv+DWJ7/akux/2xDsf90Ubv/Sy7N/wwL9/8NDPf/FxX1/y4p7/9VSuf/j3va/+vKxv//28L//9rC///a
        wv/+2sL/9tfDiffYw6n/2sL//9rC///bw//2Y17/8wkR/+YOIv/BDkf/jQ97/1wPq/88Ec3/QlWa/5RY
        Tf/kQDX/4Tkx/7pOVv+dbHj/toiM/8+rpP+pbpr/IRXq/w0N+P8KDfv/CQv6/wgJ+f8XFfX/x6vO///d
        wf//2sL//9rC//7awv/218OK99fCmf/awv//2sL//9vD//N8ef/vFyP/8AoU//MKEv/zDBT/7g0a/98R
        Lf9gVGX/ImJe/5xIRv/dMy7/1EpI/8p+f//Sw8L/0Kuo/8Zcb/+yF1z/lg9y/2wPm/9BD8b/Hw3m/xgW
        9P/DqND//93B///awv//2sL//trC/vXXwnn118J4/trC/v/awv//2sL/+eLZ//XCxv/xeoL/7zxG/+4Y
        I//wCxb/7gwa/3BUYf9Nfn3/QGdk/6tEQP/VWFX/yImK/9alpf/c2tn/yoWT/+kTIf/0DBP/8Q0Y/+QO
        Jf/GDkL/mxh0/9yptv//3cP//9rC///awv/92sL489bCW/HVw0r92cLy/9rC///Zwf/77eT///////7+
        /v/67O3/9sLG//OPlv/vY2//c2x2/3CVkv8ja2f/N1pZ/7Jycv/YYV//1z48/9GGhf/Hg43/5iEx/+8P
        Gv/wChX/8QkU//MLE//zFhz/+qqa///dxP//2sL//9rC//zZwufv1cIy6dPCHPrZwtP/2sL//9rC//vj
        1f/79PH//fz7///////////////////9/f90oJ7/EmJe/xxnY/8+cXD/SV1d/7w6OP/YLSr/1DEw/9Zu
        b//0x8v/9ayx//KCif/vUFr/7ycy/+8ZI//5qZn//93E///awv//2sL/+tnCv+LQww9SoL8B99jDk//a
        wv//2sL//9rC//3bxf/74ND/+unf//vx7P/89/X//vz7/3Sin/8JX1r/I2pn/3iVlP8eY2H/emtr/9E9
        O//WKSj/4Gtq//36+v///////v////z3+P/5297/9a6y//rHt///28P//9rC//7awv/12MJ6/+TCAPfY
        wwDy1sM+/dnC7//awv//2sL//9rC///awf/+2cH//drD//zcyP/84dH/fZ+Z/0N3df8caGT/IWhm/2GR
        kP+ApaX/cVlY/88yMP/ibGv/+vTy//38+//+/v7////////////+/fz//uLR///awf//2sL//NnC4u/V
        wivy1sIA5tHCANzNwgf42MOi/trC///awv//2sL//9rC///awv//2sL//9rB//7bxP+Bn5f/dpaU/ypv
        bP9wnZv/d6Ce/x1nY/8UXlr/dktK/91saP/728n//ODP//vm2f/87ub//ffz//z6+f/84M///9rB//7a
        wv/32MKKoru/AeHQwQCtvMMA9tjEAPDWxDL72cLf/9rC///awv//2sL//9rC///bwv//2sL//9vF/4Ce
        mf84dHf/h6es/4Gjp/8vb3H/Kmxu/ytsb/81aG7/pIeK//3Yw///2sH//9nB///awv/93cf/++LS//3c
        yP//2sL/+tnC0O3VwyHx1sMAAAAAAAAAAADcz8MA///CAPTXw2X92sL1/9rC///bwv/z08T/78/A///c
        wv//28P/5s6//9nFvf/r0Mj/2MS8/9bDu//XxLv/18S7/9bDu//iy7///trD///awv//28L/8NLF//PT
        wf//2sH//9rC//zZwuzy18NP/97CANfNxgAAAAAAAAAAAAAAAADp08QA4dDFBvfYw4H+2sL4+NbF/5SO
        2v/HtMn/3sTC/+/Qvv//3cL//9zC///bwv//28L//9vC///bwv//28L//9vC///bwv//28L//drC/9/F
        yf99fNr/vKvJ//rYwv/92sLz9tfDbcvHxwLl0cQAAAAAAAAAAAAAAAAAAAAAAAAAAADs1cYA5tPHCfjY
        w4Dz1Mb0pJrU/9/GxP+nntb/fHnP/8axwv/py8H//9vB///cwv//28L//9zC///cwv//28L/+tfC/+TI
        xf+vpNT/t6vS/2Jn4/+3qNH/99fE7fbYw23i0cUF6tTEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADq1MMA4dHDBvbYwmH52cTd/9zC/8ez0v9jad//ZWvj/5OP2P+pnMj/xbG//97Ewv/Ru8j/y7bE/62g
        yv+VjtH/a27R/3p61v+1qdX/58zI//nZw9P12MNQ1czEA+TSwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADdzsMAmLPJAPLWwi3828Kc0r3O7Hx74f/SvdD/i4jY/3t72f+GhNT/eHjZ/4SE
        3v9eZNz/ZmrW/4B/2P+mm9H/2MDJ/+3Qx+b62sKO79bDI//3vwDPzcIAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6NPEAOPSwgXp08Y37NPHifzawszmy8nu18DN/OrO
        yf/NuND/28PM/9W/y//dxsn779LF7Pvaw8X62sKA9NjBLtrNwwPl0cIAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANLMwgDEx8IB6NLDFvbZ
        wj/628Fq+NjCifrbwpr52sGZ+trBhvnawWXz2MI659LCEqq+wAHHx8EAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/+AH//8AAP/+AAB/+AAAH/AAAA/gAAAH4AAAB8AAAAOAAAADgAAAAYAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAGAAAABwAAAA+AA
        AAfgAAAH8AAAD/gAAB/+AAB//wAA///AA/8=
</value>
  </data>
</root>